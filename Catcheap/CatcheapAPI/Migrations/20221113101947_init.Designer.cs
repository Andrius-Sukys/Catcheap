// <auto-generated />
using System;
using CatcheapAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CatcheapAPI.Migrations
{
    [DbContext(typeof(CatcheapAPIContext))]
    [Migration("20221113101947_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CatcheapAPI.Models.Journeys_Classes.Journey", b =>
                {
                    b.Property<int>("JourneyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JourneyId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dist")
                        .HasColumnType("int");

                    b.Property<int>("JourneysJourneysId")
                        .HasColumnType("int");

                    b.HasKey("JourneyId");

                    b.HasIndex("JourneysJourneysId");

                    b.ToTable("Journey");
                });

            modelBuilder.Entity("CatcheapAPI.Models.Journeys_Classes.Journeys", b =>
                {
                    b.Property<int>("JourneysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JourneysId"), 1L, 1);

                    b.Property<int>("CarVehicleId")
                        .HasColumnType("int");

                    b.HasKey("JourneysId");

                    b.HasIndex("CarVehicleId")
                        .IsUnique();

                    b.ToTable("Journeys");
                });

            modelBuilder.Entity("CatcheapAPI.Models.Vehicles_Classes.Cars_Classes.Car", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"), 1L, 1);

                    b.Property<double>("BatteryCapacity")
                        .HasColumnType("float");

                    b.Property<double>("BatteryLevel")
                        .HasColumnType("float");

                    b.Property<double>("Consumption")
                        .HasColumnType("float");

                    b.Property<double>("ExpectedRange")
                        .HasColumnType("float");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Mileage")
                        .HasColumnType("float");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("CatcheapAPI.Models.Journeys_Classes.Journey", b =>
                {
                    b.HasOne("CatcheapAPI.Models.Journeys_Classes.Journeys", null)
                        .WithMany("distanceList")
                        .HasForeignKey("JourneysJourneysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CatcheapAPI.Models.Journeys_Classes.Journeys", b =>
                {
                    b.HasOne("CatcheapAPI.Models.Vehicles_Classes.Cars_Classes.Car", null)
                        .WithOne("journeys")
                        .HasForeignKey("CatcheapAPI.Models.Journeys_Classes.Journeys", "CarVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CatcheapAPI.Models.Journeys_Classes.Journeys", b =>
                {
                    b.Navigation("distanceList");
                });

            modelBuilder.Entity("CatcheapAPI.Models.Vehicles_Classes.Cars_Classes.Car", b =>
                {
                    b.Navigation("journeys");
                });
#pragma warning restore 612, 618
        }
    }
}
